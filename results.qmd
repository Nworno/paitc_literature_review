---
title: "results_stats"
format: html
---

```{r config knitr, echo=FALSE}
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(error = FALSE)
knitr::opts_chunk$set(message = FALSE)

knitr::opts_chunk$set(fig.width = 12)
knitr::opts_chunk$set(fig.height = 8)
```


```{r}
library(readr)
library(stringr)
library(dplyr)
library(tidyr)
library(tibble)
library(purrr)
library(lubridate)
library(ggthemr)
library(arsenal)
library(flextable)

source("R_snippets.R")
ggthemr::ggthemr("fresh")
```


```{r}
all_articles_info <- read_csv("data/articles_selection/all_articles_info.csv", col_types = cols(.default = "c"))
all_articles_id <- read_csv("data/articles_selection/articles_id.csv", col_types = cols(.default = "c"))
# extraction_list <- read_csv("data/articles_selection/included_articles_after_review.csv", col_types = cols(.default = "c)))
flow_chart_df <- read_csv("data/to_use_for_stats/flow_chart.csv", col_types = cols(included = "l",
                                                                                   full_article = "l",
                                                                                   third = "l",
                                                                                   during_extraction = "l",
                                                                                   .default = "c"))
results_df <- read_tsv("data/to_use_for_stats/long_results_final.tsv", col_types = cols(.default = "c"))
ttt_mapped <- read_tsv("data/to_use_for_stats/decision_atc_mapped.tsv", col_types = cols(.default = "c", car_t_cells = "l"))
conditions_mapped <- read_tsv("data/to_use_for_stats/decision_icd_mapped.tsv", col_types = cols(.default = "c"))
```


```{r}
source("questions_sections.R")
methodology_questions <- questions_sections$methodology %>% unname()
```


```{r}
# selection articles ---------------------------------------------------------
all_articles_id <- all_articles_id %>%
  mutate(DOI = tolower(DOI)) %>%
  rename(doi = DOI)
included_articles <- filter(flow_chart_df, included)

results_df <- left_join(results_df, all_articles_id[, c("doi", "PMID")], by = "doi")

# 12 articles manquants, voir une fois qu'on aura tous les articles avec Jérôme
# pour l'instant ne fonctionne pas car manque les articles à adjudiquer par Jérôme
# stopifnot(identical(
#   unique(included_articles$PMID)[order(unique(included_articles$PMID))],
#   unique(results_df$PMID)[order(unique(results_df$PMID))]
# ))

included_articles_info <- semi_join(all_articles_info, included_articles, by = "PMID")
```


```{r Discarding xx answers}

results_df <- results_df %>% 
  filter(!answer == "xx") %>% 
  #TODO: check these NAs upstream
  filter(!is.na(answer))

```

```{r Renaming questions}
results_df <- results_df %>% 
  mutate(questions = case_when(
    questions == "Primary Outcome Name (first one mentioned in the text of the results part if no primary outcome defined)" ~ "primary_outcome_name", 
    questions == "Primary outcome: variable type" ~ "primary_outcome_type",
    questions == "Definition of a single primary outcome for the indirect comparison" ~ "primary_outcome_yn",
    questions == "Anchored comparison?" ~ "anchored_yn",
    #TODO: check that there wasn't a parsing error for answer below, since the part after the ';' seems to have been discarded
    questions == "Sample size in the IPD treatment arm used in the indirect comparison, ie effective sample size after reweighting for MAIC" ~ "ess_ttt", 
    questions ==  "If anchored, total initial sample size IPD" ~ "n_ipd_total",
    questions ==  "If anchored, total sample size non IPD" ~ "n_nonipd_total",
    questions ==  "Initial sample size of the population of interest in the IPD treatment arm" ~ "n_ipd_ttt",
    questions ==  "If anchored comparison, initial sample size of the population of interest in the IPD anchor arm" ~ "n_ipd_anchor",
    questions ==  "Sample size of the population of interest in the non IPD treatment arm" ~ "n_nonipd_ttt",
    questions ==  "If anchored comparison, sample size of the population of interest in the non IPD treatment anchor arm" ~ "n_nonipd_anchor",
    questions ==  "Sample size in the IPD treatment arm used in the indirect comparison, ie effective sample size after reweighting for MAIC; or sample size used in the regression model for STC" ~ "ess_ttt",
    questions ==  "If anchored comparison, effective sample size after reweighting for MAIC; or sample size used in the regression model for STC in the IPD anchor arm" ~ "ess_anchor",
    questions ==  "If anchored, total ESS IPD" ~ "ess_total",
    questions == "Type of population-adjusted indirect comparisons performed" ~ "paitc_type",
    TRUE ~ questions
  ))
```

```{r Creating section data frames}
general_information_df <- results_df[results_df$section == "general_information",]
individual_study_df <- results_df[results_df$section == "study_information",]
paitc_results <- results_df[results_df$section %in% c("methodology", "results"), ]
```

```{r Wide methodo}
wide_methodo <- paitc_results %>% 
  filter(section == "methodology") %>% 
  pivot_wider(id_cols = c(doi, PMID, n_itc), names_from = questions, values_from = answer)
```


```{r Wide results}
wide_results <- paitc_results %>% 
  filter(section == "results") %>% 
  pivot_wider(id_cols = c(doi, PMID, n_itc), names_from = questions, values_from = answer)
```

# Articles general Information

```{r}
general_information_df <- general_information_df %>% 
  select(-n_itc, -study_number, -section, -PMID) %>% 
  select(answer, everything())
```

## Journals

```{r Publication journals, fig.height=18}
#TODO: rajouter IF
## Authors specific affiliations would need to be parsed and retrieved through pubv1_info.txt --> regex looking at ". " preceded by a ", " or "^"
included_articles_info %>%
  mutate("journal_title" = JT,
         "journal_title_short" = TA) %>%
  group_by(journal_title_short) %>%
  summarise(count = n()) %>%
  arrange(desc(count)) %>%
  ggplot(aes(x = reorder(journal_title_short, count), y = count, label = count)) +
  geom_bar(stat = "identity") +
  geom_label() + 
  theme(axis.text.y = element_text(size = 12)) +
  scale_x_discrete() +
  coord_flip() +
  labs(title = "Publication journals",
       x = "Journals",
       y = "Articles count")
```


```{r Publication date}
## Publication dates
publication_date_df <- included_articles_info %>%
  select(EDAT) %>%
  mutate(publication_date = as_date(EDAT, format = "%Y/%m/%d %H:%M"),
         publication_year = year(publication_date),
         publication_date_q = lubridate::quarter(publication_date, with_year = TRUE),
         publication_date_s = lubridate::semester(publication_date, with_year = TRUE),
         publication_date_s = ifelse(round(publication_date_s %% 0.2, 1) == 0.1,
                                      trunc(publication_date_s),
                                      trunc(publication_date_s) + 0.5))


publication_date_df %>%
  filter(publication_year < 2022) %>%
  group_by(publication_year) %>%
  summarise(count = n()) %>%
  ggplot(aes(x = publication_year, y = count)) +
  geom_point() +
  geom_line() +
  geom_text(aes(label = count), nudge_y = 2.5, nudge_x = -0.05) +
  scale_x_continuous(breaks = 2010:2022) +
  labs(title = "MAIC/STC implementation: publications by years",
       x = "Year",
       y = "Publication counts")
```
```{r Intervals between articles received and accepted}
publication_dates_df <- included_articles_info %>% mutate(
  received_date = str_extract(PHST, "[^\\].]+(?=\\[received\\])") %>% str_trim() %>% as_datetime(format = "%Y/%m/%d %H:%M"),
  accepted_date = str_extract(PHST, "[^\\].]+(?=\\[accepted\\])") %>% str_trim() %>% as_datetime(format = "%Y/%m/%d %H:%M"),
  pubmed_date = str_extract(PHST, "[^\\].]+(?=\\[pubmed\\])") %>% str_trim() %>% as_datetime(format = "%Y/%m/%d %H:%M"), 
  time_acceptation = accepted_date - received_date, 
  time_publication_pubmed = pubmed_date - received_date
) %>% 
  select(PHST, received_date, accepted_date, time_acceptation, time_publication_pubmed, pubmed_date, PMID, PT, TA, PL, JT)

publication_dates_df %>% 
  pivot_longer(cols = c(time_acceptation, time_publication_pubmed), names_to = "time_type", values_to = "time") %>% 
  mutate(time = time/30.5) %>% 
  ggplot(aes(x = time)) + 
  facet_wrap(~ time_type) +
  geom_histogram() + 
  labs(x = "Time in months", "publication count", 
       title = "Time between submission and acceptation")
```
## Authors' affiliations

```{r Authors affiliations}
authors_affiliation_df <- general_information_df %>% 
  filter(questions == "Positions of study investigators (for any authors of the article, any that applies)") %>%
  # Manually correcting variation introduced during the review process 
  mutate(answer = if_else(answer == "Academic, Private Data Analysis Company, Pharmaceutical Industry",
                         "Academic, Pharmaceutical Industry, Private Data Analysis Company",
                         answer)) %>%
  select(doi, answer) %>% 
  mutate(positions = str_split(answer, ", ")) %>% 
  unnest(positions)
```


```{r }
authors_affiliation_df %>% 
  distinct(doi, answer) %>% 
  count(answer) %>% {
  ggplot(., aes(x = answer, y = n)) +
  geom_bar(stat = "identity") +
  geom_label(aes(label = n), 
             position = position_stack(vjust = 0.5)) + 
  coord_flip() + 
  scale_x_discrete(limits = rev(.$answer)) +
  labs(x = NULL, y = "Articles count", title = "Authors' positions") +
  theme(axis.text.y = element_text(size = 8))
}
```


```{r}
authors_affiliation_df %>% 
  group_by(positions) %>% 
  summarise(counts = n()) %>% 
  ggplot(aes(x = positions, y = counts)) +
  geom_bar(stat = "identity") +
  geom_label(aes(y = 150, label = counts),
             position = position_stack(vjust = 0.5),
             color = "black",
             show.legend = FALSE) + 
  labs(title = "Authors' positions",
       subtitle = "At least one author affiliated with: ", 
       y = "Articles count", 
       x = "Positions")
```


```{r }
authors_affiliation_df %>% 
  mutate(counter = TRUE) %>% 
  pivot_wider(names_from = positions, values_from = counter, values_fill = FALSE) %>% 
  mutate(collaboration = Academic & `Pharmaceutical Industry`) %>% 
  count(collaboration) %>% 
  ggplot(aes(x = collaboration, y = n)) + 
  geom_bar(stat = "identity") + 
  geom_label(aes(label = n, y = 30)) +
  scale_x_discrete(labels = c(`FALSE` = "No collaboration", `TRUE` = "Collaboration")) +
  labs(x = NULL, 
       y = "Articles count", 
       title = "Academics/Pharmaceutical Collaborations")
```

### First and last authors positions

```{r}
general_information_df %>% 
  mutate(answer = ifelse(tolower(answer) %in% c("usa", "uk"),
                         str_to_upper(answer),
                         str_to_title(answer))) %>% 
  filter(questions %in% c("Countries of first author affiliations", "Countries of last author affiliations")) %>% 
  count(questions, answer) %>%
  ggplot(aes(x = reorder(answer, n), y = n)) + 
  geom_bar(stat = "identity") + 
  facet_grid(" ~ questions") + 
  coord_flip() + 
  labs(title = "Countries", 
       x = NULL, 
       y = "Article count")
  
```

## Methodology departments


```{r}
general_information_df %>% 
  filter(questions == "At least one author affiliated with a department of Biostatistics, Epidemiology, Public Health, Pharmacoepidemiology, or a Clinical Research unit, or private data analysis company") %>% 
  count(answer) %>% 
  ggplot(aes(x = answer, y = n, label = n)) +
  geom_bar(stat = "identity") +
  geom_label() +
  labs(x = "Affiliation with a methodology department/data-analysis company", 
       title = "Involvement of a Methodology department/data-analysis company", 
       y = "Count")
```

## Fundings

```{r}
general_information_df %>% 
  filter(questions == "Mentioned sources of funding") %>% 
  count(answer) %>% 
  ggplot(aes(x = answer, y = n, label = n)) +
  geom_bar(stat = "identity") +
  geom_label() +
  coord_flip() + 
  labs(x = NULL,
       title = "Mentioned of source of fundings", 
       y = "Count")
```


## Investigated medical conditions

```{r fig.width=12}
conditions_df <- general_information_df %>% 
  filter(questions == "Medical Condition of Interest Name") %>% 
  left_join(conditions_mapped, by = c("answer" = "condition_name"))
# conditions_df
stopifnot(!any(is.na(conditions_df$`concept_name_ICD10 Chapter`)))
```


```{r fig.width=12, fig.height=10}
conditions_df %>% 
  count(`concept_name_ICD10 Hierarchy`, `concept_code_ICD10 Hierarchy`) %>% 
  mutate(across(where(is.character), as.factor)) %>% 
  ggplot(aes(x = reorder(`concept_name_ICD10 Hierarchy`, as.numeric(`concept_code_ICD10 Hierarchy`)),
             y = n, 
             label = n)
  ) + 
  geom_bar(stat = "identity") +
  geom_label() + 
  coord_flip() +
  scale_y_discrete() + 
  labs(x = NULL, 
       y = "Articles count", 
       title = "Investigated Condition", 
       subtitle = "By ICD-10 Subchapter")

```


```{r fig.width=12}
conditions_df %>% 
  count(`concept_name_ICD10 Chapter`, `concept_code_ICD10 Chapter`) %>% 
  mutate(across(where(is.character), as.factor)) %>% 
  ggplot(aes(x = reorder(`concept_name_ICD10 Chapter`, as.numeric(`concept_code_ICD10 Chapter`)),
             y = n, 
             label = n)
  ) + 
  geom_bar(stat = "identity") +
  geom_label() + 
  coord_flip() + 
  labs(x = NULL, 
       y = "Articles count", 
       title = "Investigated condition", 
       subtitle = "By ICD-10 Chapter")

```

# Results

```{r}
wide_methodo_results <- paitc_results %>% 
  pivot_wider(id_cols = c(doi, n_itc), names_from = questions, values_from = answer)
```



```{r data management to determine IPD/nonIPD treatments}
ttt_ipd_df <- paitc_results %>% 
  select(doi, section, n_itc, questions, answer) %>% 
  filter(str_detect(questions,
                    pattern = c("(Treatment name)|(Study 'number\\(s\\)' for treatment)"))) %>% 
  separate(questions, into = c("questions", "treatment number"), 
           sep = "\\s(?=\\d$)"
  ) %>% 
  pivot_wider(names_from = questions, 
              values_from = answer) %>% 
  mutate(`Study 'number(s)' for treatment` = str_split(`Study 'number(s)' for treatment`, ";")) %>% 
  unnest_longer(`Study 'number(s)' for treatment`) %>% 
  left_join(individual_study_df %>% 
              filter(questions == "Patient-level data used") %>% 
              pivot_wider(names_from = questions, values_from = answer) %>% 
              rename(IPD = `Patient-level data used`) %>% 
              select(doi, study_number, IPD), 
            by = c("doi" = "doi", "Study 'number(s)' for treatment" = "study_number")
  )

stopifnot(
  "Some combinations of doi-n_itc-treatment must be assigned both IPD and non IPD" = nrow(distinct(ttt_ipd_df, doi, `treatment number`, n_itc, `Treatment name`, IPD)) == nrow(distinct(ttt_ipd_df, doi, n_itc, IPD))
)

```


### Treatments
```{r, fig.height = 18}

ttt_ipd_df %>% 
  mutate(IPD = tolower(IPD) %>% factor(levels = c("yes", "no"))) %>% 
  #TODO: fix the NA issue
  filter(!is.na(IPD)) %>% 
  distinct(doi, n_itc, `treatment number`, `Treatment name`, IPD) %>% 
  left_join(distinct(ttt_mapped[, c("decision", "first", "second", "third", "car_t_cells")]),
            by = c("Treatment name" = "decision")) %>%
  group_by(IPD) %>% 
  count(first) %>% 
  ggplot(aes(x = reorder(first, n), y = n, label = n)) +
  geom_bar(stat = "identity") +
  geom_label() +
  coord_flip() +
  facet_wrap(c("IPD"), labeller = labeller("IPD" = c("no" = "Non IPD", "yes" = "IPD"))) +
  labs(title = "Treatments compared", 
       subtitle = "ATC classification level 2") +
  theme(axis.text = element_text(size = 16), 
        strip.text = element_text(size = 18), 
        plot.title = element_text(size = 22), 
        plot.subtitle = element_text(size = 20))
```


## Individual studies 

```{r, results='asis'}
individual_studies_questions <- c(
  "Patient-level data used", 
  "Clinical Trial", 
  "Country where the clinical trial/observational study was conducted (international if more than one)",
  "Phase of the clinical trial (clinical trial only)", 
  "Number of treatment arms (clinical trial only)"
)

individual_study_df %>% 
  mutate(answer = str_to_title(answer)) %>% 
  pivot_wider(names_from = questions, values_from = answer) %>% 
  select(all_of(individual_studies_questions)) %>% 
  tableby(`Patient-level data used` ~ ., data = .) %>% 
  summary()
```

### Methodology statistics per article

```{r, results='asis'}
# results at the article level: eg "at least one ... per article"
wide_methodo_results %>% 
  group_by(doi) %>% 
  # to fix the few cases where max(n_itc) isn't the number of comparisons performed
  summarise(count_comparisons = n(), 
            at_least_one_maic = any(paitc_type == "MAIC"), 
            at_least_one_stc = any(paitc_type == "STC"),
            at_least_other_paitc = any(!paitc_type %in% c("MAIC", "STC")), 
            ) %>% 
  select(-doi) %>% 
  `labels<-`(c(
    "count_comparisons"    = "PAITC count (per article)",
    "at_least_one_maic"    = "At least one MAIC in the article", 
    "at_least_one_stc"     = "At least one STC in the article", 
    "at_least_other_paitc" = "At least one other PAITC")) %>% 
  tableby( ~ ., data = .) %>% 
  summary() 
```

## Methodology per comparisons

```{r}

# Only binary variables
list_questions_methodo <- c(
  "Type of population-adjusted indirect comparisons performed" = "paitc_type",
  "Anchored comparison?" = "anchored_yn",
  "Form of the indirect comparison" = "Form of the indirect comparison",
  "Definition of a single primary outcome for the indirect comparison" = "primary_outcome_yn",
  # "Primary Outcome Name (first one mentioned in the text of the results part if no primary outcome defined)" = "Primary Outcome Name (first one mentioned in the text of the results part if no primary outcome defined)", #TODO --> non UTF8 characther somewhere, to be fixed
  "Primary outcome: variable type" = "primary_outcome_type",
  # "Justification for selecting variables to be included in the adjustment model (in the main text)" = "Justification for selecting variables to be included in the adjustment model (in the main text)",
  "Inclusion of prognostic factors in the adjustment/matching model" = "Inclusion of prognostic factors in the adjustment/matching model",
  "Inclusion of treatment-effect modifiers in the adjustment/matching model" = "Inclusion of treatment-effect modifiers in the adjustment/matching model",
  "Mention of the MAIC weights estimation model / STC adjustment model details in the main text **or supplemental materials** (ie matching on first moment, second moment, including interaction term, etc)" = "Mention of the MAIC weights estimation model / STC adjustment model details in the main text **or supplemental materials** (ie matching on first moment, second moment, including interaction term, etc)",
  "Discussion of the choice of the scale for the outcome in the main text (ie natural outcome scale vs transformed outcome scale)" = "Discussion of the choice of the scale for the outcome in the main text (ie natural outcome scale vs transformed outcome scale)"
)
```



```{r}
wide_methodo %>%
  select(all_of(list_questions_methodo)) %>% 
  # Apparently select rename the columns using the names of list_questions_methodo ...
  tableby(list(`Type of population-adjusted indirect comparisons performed`, `Anchored comparison?`) ~ ., data = .) %>% 
  summary()
```

### Variables selection justification



```{r DM Variables selection}
variables_selection <- wide_methodo %>% 
  rename(variables_justification = `Justification for selecting variables to be included in the adjustment model (in the main text)`) %>%
  select(doi, n_itc, variables_justification) %>% 
  # because the complete item for this one is "Nothing mentioned, not reported", thus simplyfying it
  mutate(variables_justification = variables_justification %>% 
           str_split(",") %>% 
           map(~ str_trim(.x)) %>% 
           map(~ .x[.x != "not reported"])) %>%
  mutate(no_justification = sapply(variables_justification, function(x) any(x == "Nothing mentioned")), 
         wrong_justification = sapply(variables_justification,
                                      function(x) all(x %in% c(
                                        "Nothing mentioned",
                                        "Statistical imbalanced between treatment groups (independently of the status of prognostic/effect modifier)",
                                        "Status of prognostic factor/treatment effect modified assessed in the IPD dataset"
                                      )))
  )


# Handling of list like columns 
# (ie multiple choices questions : to be concatenated with merge(tab1, tab2, all = TRUE))
# update: this only works if the total are identical, which is not the case here
# solution is to merge downstream with flextable probably, or not merging at all
# Plot using 'group' see https://jennybc.github.io/purrr-tutorial/ls13_list-columns.html
justif <- variables_selection %>% 
  unnest_longer(col = variables_justification) %>% 
  tableby(~ variables_justification, data = .)

# Variables selection
justif_binary <- variables_selection %>% 
  tableby(~ no_justification + wrong_justification, data = .) 

# merge(justif, justif_binary, all = FALSE)

#TODO: stratifying by anchored/unanchored, and STC/MAIC as outcome

```

### Outcomes 

```{r}
#TODO: group outcome names in larger categories
wide_methodo  %>% 
  mutate(primary_outcome_name = stringr::str_to_title(primary_outcome_name)) %>% 
  add_count(primary_outcome_name, name = "primary_outcome_name_n") %>% 
  mutate(primary_outcome_name = forcats::fct_reorder(primary_outcome_name,
                                                     primary_outcome_name_n, 
                                                     .desc = TRUE)) %>% 
 # TODO : fix missing outcome name 
  tableby( primary_outcome_yn ~  primary_outcome_type + primary_outcome_name ,
           data = .) %>% 
  summary()
```



### Sample sizes

```{r}
wide_sample_size_df <- wide_results %>% 
  left_join(distinct(wide_methodo, doi, n_itc, `anchored_yn`, paitc_type)) %>% 
  select(anchored_yn, paitc_type, contains(c("n_ipd", "n_nonipd", "ess"))) %>%
  mutate(across(contains(c("n_ipd", "n_nonipd", "ess")), as.integer)) %>% 
  mutate(
    n_ipd_total = case_when(
      !is.na(n_ipd_total) ~ n_ipd_total,
      anchored_yn == "No" ~ n_ipd_ttt, 
      anchored_yn == "Yes" ~ n_ipd_ttt + n_ipd_anchor, 
      TRUE ~ NA_integer_),
    n_nonipd_total = case_when(
      !is.na(n_nonipd_total) ~ n_nonipd_total,
      anchored_yn == "No" ~ n_nonipd_ttt, 
      anchored_yn == "Yes" ~ n_nonipd_ttt + n_ipd_anchor, 
      TRUE ~ NA_integer_),
    ess_total = case_when(
      !is.na(ess_total) ~ ess_total,
      anchored_yn == "No" ~ ess_ttt,
      anchored_yn == "Yes" ~ ess_ttt + ess_anchor,
      TRUE ~ NA_integer_)
  ) %>% 
  mutate(difference_ess_ttt = n_ipd_ttt - ess_ttt,
         difference_ess_anchor = n_ipd_anchor - ess_anchor, 
         difference_ess_total = n_ipd_total - ess_total, 
         rapport_ess_ttt = ess_ttt / n_ipd_ttt,
         rapport_ess_anchor = ess_anchor / n_ipd_anchor,
         rapport_ess_total = ess_total / n_ipd_total)

long_sample_size_df <- wide_sample_size_df %>% 
  pivot_longer(cols = !all_of(c("anchored_yn", "paitc_type"))) %>% 
  mutate(ipd_yn = case_when(
    grepl("total", name) ~ "Total",
    grepl("_ipd_", name) | grepl("ess_", name) ~ "IPD", 
    grepl("_nonipd_", name) ~ "Non IPD",
    TRUE ~ NA_character_
  ),
  sample_size_type = case_when(
    grepl("difference", name) ~ "Difference",
    grepl("rapport", name) ~ "Rapport", 
    grepl("ess", name) ~ "ESS",
    TRUE ~ "Original")
  )
```

```{r}
wide_sample_size_df %>% 
  mutate(
    n_ipd_yn = ifelse(is.na(n_ipd_total) & is.na(n_ipd_ttt), "No", "Yes"), 
    n_nonipd_yn = ifelse(is.na(n_nonipd_total) & is.na(n_nonipd_ttt), "No", "Yes"), 
    ess_yn = ifelse(is.na(ess_ttt) & is.na(ess_total), "No", "Yes"), 
) %>% 
  tableby(list(anchored_yn, paitc_type) ~ n_ipd_yn + n_nonipd_yn + ess_yn, data = .) %>% 
  summary()
```

```{r Sample size reduction, fig.width = 14}

sample_size_labels <- c(
  Rapport = "Rapport ESS/Original",
  Difference = "Difference Original - ESS", 
  Original = "Original Sample Size", 
  ESS = "ESS"
)

long_sample_size_df %>% 
  filter(paitc_type %in% c("MAIC"), 
         ipd_yn == "Total") %>%
  mutate(sample_size_type = factor(sample_size_type, levels = c("Original", "ESS", "Difference", "Rapport"))) %>% 
  # filter(ipd_yn == "Total") %>% 
  ggplot(aes(y = value)) +
  geom_boxplot() + 
  facet_wrap(~ sample_size_type,
             scales = "free",
             ncol = 4, 
             labeller = labeller( sample_size_type = sample_size_labels)) +
  theme(legend.position = "bottom", legend.direction = "horizontal", axis.ticks =  element_blank()) +
  labs(title = "Sample Size Reduction in MAIC", 
       y = "Sample Size", 
       x = NULL)

```

